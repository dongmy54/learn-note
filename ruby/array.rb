# 测试一个
a = [1,2,3,4,5,6]
a.join('q')       # 1q2q3q4q5q6


#===================================================================================#
# 用*展开数组 赋值
arr = [2,5,8]
a,b,c = *arr  # * 展开数组
[a,b,c].each {|i| puts i}
# => 2
# => 5
# => 8


#===================================================================================#
# inject 与 reduce
# 相同的两个方法
# 功能：迭代效果（将上一次执行结果用于下一次）
# 1、在不传参数（初始值）时，第一个元素做初始值
# 2、这里n 初始值 m 执行后的结果
puts [1,2,3].inject {|n,m| m + n }    # => 6
puts [1,2,3].reduce {|n,m| m + n }    # => 6
puts [1,2,3].inject(2) {|n,m| m + n } # => 8


#===================================================================================#
# flatten 摊平数组
# 接参数时 表示摊平层级
arr = [1,2,3,[2,[5,6],3],8]
arr.flatten
# => [1,2,3,2,5,6,3,8]
arr.flatten(1)
# => [1,2,3,2,[5,6],3,8]
