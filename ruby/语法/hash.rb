# hash 后面接 key 输出value
{
  :a => 'A',
  :b => 'B'
  }[:a]   # => 'A'


#===================================================================================#
# hash 也可用map
# i[0] key i[1] value
{:a => 'b',:b => 'c',:c => 'd'}.map{|i| puts "#{i[0]},#{i[1]}"}
# a,b
# b,c
# c,d


#===================================================================================#
# find/detect方法 返回满足条件的元素 find detect 等价
h = {:'1' => 'g', :'2' => 'o', :'3' => 'p'}
k,v = h.find {|k,v| v == 'o'}
puts k,v
# :'2'
# 'o'


#===================================================================================#
# fetch
# 从hash取一个没有的键时，可通过带参数默认
h = {:a => 'A',:b => 'B'}
h.fetch(:z, 'd')
# => 'd'


#===================================================================================#
# 嵌套hash 排序
# PS1: sort_by 利用（到达要排序的层）
# PS2: 结果回返回 数组
h = {:o => {:a => 1,:b => 'los'},
     :p => {:a => -2, :b => 'saf'},
     :k => {:a => 3, :b => 'fwe'},
     :l => {:a => 2, :b => 'sdd'}}

h.sort_by {|k,v| v[:a]}
# =>[[:p, {:a=>-2, :b=>"saf"}], 
# => [:o, {:a=>1, :b=>"los"}], 
# => [:l, {:a=>2, :b=>"sdd"}], 
# => [:k, {:a=>3, :b=>"fwe"}]]
