# ^ 以 开头 $ 以 结尾
#（abc) 圆括号 全匹配 abc 一连
# [abc] 方括号 选择性匹配 a b c 中一个
# a|b 竖线  a 或 b 中一个 通常这样用 （abc)|(huj)
# \w 匹配 字母 数字 下划线（_)
# [^ahu] 非ahu
# ? 表示 0个 或 1个
# * 表示 0个 或 1个以上
# + 表示 1个 或 1个以上


#===================================================================================#
# match 判断匹配否
# 不能匹配时返回 nil
/^(http:\/\/|https:\/\/)(www\.)?[\w\-]*(\.)?baidu\.com/.match('http://hubaidu.com')
# => #<MatchData "http://hubaidu.com" 1:"http://" 2:nil 3:nil>


#===================================================================================#
# 1、http:// 或 https:// 开头
# 2、baidu.com 结尾
# 3、http:// 或 https:// 后接 0个 或 1个 www.
# 4. 0个 或 1个 www.后面接 0个或多个（字母/数字/下划线）
# 5、0个或多个（字母/数字/下划线） 后接 0个 或 1个 .
/^(http:\/\/|https:\/\/)(www\.)?[\w\-]*(\.)?baidu\.com/


#===================================================================================#
# 匹配方法名
# 1、不以=/？ 结尾
# 2、以大写字母 或 小写字母开头
# 3、中间可接 中横线（-） 下划线（_) 字母 数字等
/^[a-zA-Z][-\w]*[^=?]$/


#===================================================================================#
# scan 对字符串不做处理，但可以校验字符串
str = 'adhwadadsawea'
count = 0
str.scan(/a/) do
  count += 1
end
puts "str中包含#{count}个字符串"
# str中包含5个字符串


#===================================================================================#
# gsub 方法对字符串做置换
str = 'asadsa asd asda sa'
str.gsub!(/\s+/, '')
# \s+ 匹配空格 换行 等
puts "处理后字符串为#{str}"
# 处理后字符串为asadsaasdasdasa